{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport remarkGfm from 'remark-gfm'\nimport rehypePrism from '@mapbox/rehype-prism'\n\nconst computedFields = {\n  url: {\n    type: 'string',\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => `${doc._raw.sourceFileName.replace('.mdx', '')}`,\n  },\n}\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    category: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    timeToRead: { type: 'number', required: true }, // in minutes\n  },\n\n  computedFields,\n}))\n\nexport const CaseStudy = defineDocumentType(() => ({\n  name: 'CaseStudy',\n  filePathPattern: `work/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    subtitle: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n    },\n    thumbnail: { type: 'string', required: true },\n    coverImage: { type: 'string', required: true },\n    images: { type: 'list', of: { type: 'string' } },\n    projectURL: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    projectDuration: { type: 'string', required: true },\n    client: { type: 'json', required: true },\n    testimonial: { type: 'json', required: true },\n  },\n\n  computedFields,\n}))\n\nexport default makeSource({\n  contentDirPath: 'src/content',\n  documentTypes: [Post, CaseStudy],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [rehypePrism],\n  },\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,iBAAiB;AAExB,IAAM,iBAAiB;AAAA,EACrB,KAAK;AAAA,IACH,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK,eAAe,QAAQ,QAAQ,EAAE,CAAC;AAAA,EAClE;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,YAAY,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA;AAAA,EAC/C;AAAA,EAEA;AACF,EAAE;AAEK,IAAM,YAAY,mBAAmB,OAAO;AAAA,EACjD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,IACvB;AAAA,IACA,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,YAAY,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC7C,QAAQ,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC/C,YAAY,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC7C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,iBAAiB,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAClD,QAAQ,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EAC9C;AAAA,EAEA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,SAAS;AAAA,EAC/B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe,CAAC,WAAW;AAAA,EAC7B;AACF,CAAC;",
  "names": []
}
